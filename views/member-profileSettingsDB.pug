extends layout_for_update.pug

block append content 

  div.container-fluid

    div.jumbotron
      h1 Hello #{ user_first_name }
      h3 Admin User's Id: #{ user_id }
      h3 Admin User's Admin Role: #{ user_admin_role }
      h3 Membership Approval: #{ membership_approved }
      hr 
      if loggedIn
        h2 The member is online now.
      else 
        h2 #{ first_name } is not online.
      h4 Member's Id:
        p #{ id }

      if !message
        h3 Update member profile.
      else
        h3 #{ message }

      p #{ passwordMessage }

      form(action="/updateMemberProfileDB/" + id method="post")
        button.btn.btn-primary.btn-lg#password-btn(type="button" data-toggle="modal" data-target="#deleteModal") Delete Profile
        button.btn.btn-primary.btn-lg#password-btn(type="button" data-toggle="modal" data-target="#passwordModal") Change password
        br
        if user_admin_role !== "Inactive"
          label(for="auth_register") Registration Authorized
          strong  : 
            u
              strong #{ auth_register }
            br
            select(id="auth_register" name="auth_register")
              option(value = "") --
              option(value = "No") No
              option(value = "Yes") Yes
            br
        if user_admin_role !== "Inactive"
          label(for="membership_approved") Membership Approved
          strong  : 
            u
              strong #{ membership_approved }
            br
            select(id="membership_approved" name="membership_approved")
              option(value = "") --
              option(value = "No") No
              option(value = "Yes") Yes
            br
        p Dreams Created
          strong  : 
            u #{ dreams_created }
        if user_admin_role !== "Inactive"
          label(for="dreams_created") Select Dreams Created
          br
          input.border-dark(type="number" id="dreams_created" name="dreams_created")
          br 
        p Dreams Completed
          strong  : 
            u #{ dreams_completed }
        if user_admin_role !== "Inactive"
          label(for="dreams_completed") Select Dreams Completed
          br
          input.border-dark(type="number" id="dreams_completed" name="dreams_completed") 
        br
        label(for="current_project") Current Project 
          strong  :
          br
          u
            strong #{ current_project }
          br
          select(id="current_project" name="current_project")
            option(value="") --
            option(value="Dreamweaver Phoenix") Phoenix
            option(value="Dreamweaver Tucson") Tucson
        br
        p Joined: #{ date_member_joined.toDateString() }
        if user_admin_role !== "Inactive"
          input.border-dark(type="date" name="date_member_joined") 
        br
        p Time as member
          strong  : 
          - let currentTime = Date.now() - date_member_joined
          - let currentSeconds = currentTime / 1000
          - let currentMinutes = currentSeconds / 60
          - let currentHours = currentMinutes / 60
          - let currentDays = currentHours / 24
          - let currentMonths = currentDays / 30
          - let currentYears = currentMonths / 12
          - let monthsLeft = Math.floor(currentYears) * 12
          - let calcMonths = Math.floor(currentMonths - monthsLeft)
          - let monthDaysLeft = monthsLeft * 30
          - let daysLeft = Math.floor(currentDays) - monthDaysLeft
          - let calcDays = daysLeft % 30
          br 
          span Days #{ calcDays }, 
          span Months #{ calcMonths },  
          span Years #{ Math.floor(currentYears) } 
        label(for="first_name") First Name
        strong  :
        span  #{ first_name }
        input(type="text" name="first_name" placeholder= "First Name" )
        br
        label(for="last_name") Last Name
        strong  :
        span   #{ last_name }
        input(type="text" name="last_name" placeholder= "Last Name" )
        br
        label(for="email") E-mail 
        strong  :
        span   #{ email }
        input(type="text" name="email" placeholder="E-mail")
        br
        label(for="phone") Phone 
        strong  :
        span   #{ phone }
        input(type="text" name="phone" placeholder="Phone Number")
        br
        label(for="address1") Address 1 
        strong  :
        span   #{ address1 }
        input(type="text" name="address1" placeholder="Address1") 
        br
        label(for="address2") Address 2 
        strong  :
        span   #{ address2 }
        input(type="text" name="address2" placeholder="Address2") 
        br
        label(for="city") City 
        strong  :
        span   #{ city }
        input(type="text" name="city" placeholder="City")
        br
        label(for="state") State 
        strong  :
        span   #{ state }
        input(type="text" name="state" placeholder="State") 
        br
        label(for="zipCode") Zip Code 
        strong  :
        span   #{ zipCode }
        input(type="text" name="zipCode" placeholder="Zip Code") 
        br
        label(for="date_of_birth") Date of Birth 
        strong  :
        span   #{ date_of_birth.toDateString() }
        br
        input.border-dark(type="date" name="date_of_birth" placeholder="date_of_birth") 
        br      
        p 
        p Profile privacy setting
        input(type="radio" name="privacy" value="Show")
        label(for="privacy") Show Profile
        br
        input(type="radio" name="privacy" value ="Hide")
        label(for="privacy") Hide Profile 
        p Current privacy setting
          strong  :
          br
          u
            strong #{ privacy }
        p 
        p Profile membership status setting
        input(type="radio" name="membership_status" placeholder="membership_status setting" value="Active")
        label(for="membership_status") Active Membership
        br
        input(type="radio" name="membership_status" placeholder="membership_status setting" value ="Inactive")
        label(for="membership_status") Inactive Membership
        p Current membership status setting
          strong  :
          br
          u
            strong #{ membership_status }
        label(for="membership_role") Membership Role *
        br
        select(id="membership_role" name="membership_role")
            option(value="") --
            option(value="Member") Member
            option(value="Server") Server
            if dreams_completed >= 1
              option(value="Dreamweaver") Dreamweaver
            if dreams_created > 3
              option(value="Project Manager") Project Manager
            if user_admin_role === 'Site Manager'
              option(value="Site Manager") Site Manager
            else if user_admin_role === 'Local Administrator'
              option(value="Site Manager") Site Manager
              option(value="Local Administrator") Local Administrator
        br
        p Current Membership Role
          strong  :
          br
          if membership_role === 'Member'
            u 
              strong Member
          else if membership_role === 'Server'
            u 
              strong Server
          else if membership_role === 'Dreamweaver' 
            u
              strong Dreamweaver
          else if membership_role === 'Project Manager' 
            u
              strong Project Manager
          else if membership_role === 'Site Manager' 
            u 
              strong Site Manager
        if user_admin_role !== "Inactive"
          label(for="admin_role") Administrative Role *
          br
          em (>Three(3) Dreams required for Project Manager status) 
          br 
          em (>Ten(10) Dreams required for Site Manager status)
          br
          select(id="admin_role" name="admin_role")
            option(value="") --
            if dreams_created > 3
              option(value="Project Manager") Project Manager
            if dreams_created > 10
              if user_admin_role === 'Local Administrator'
              option(value="Site Manager") Site Manager
              option(value="Local Administrator") Local Administrator
        br
        if user_admin_role !== "Inactive"  
          p Current Administrator Role
            strong  :
            br
            if admin_role === 'Inactive' 
              u
                strong None
            else if admin_role === 'Project Manager' 
              u
                strong Project Manager
            else if admin_role === 'Site Manager' 
              u
                strong Site Manager
            else if admin_role === 'Local Administrator' 
              u
                strong Local Administrator

        button.btn.btn-primary.btn-lg#login-btn(type="submit") Submit

    div.modal.fade#passwordModal
      .modal-dialog
        .modal-content  
          .modal-header 
            h1.modal-title Change Password

          .modal-body  
            form(action="/updateMemberPassword/" + id method="post") 
              input(type="text" name="email" value=email hidden)
              input(type="text" name="password1" placeholder="password" required)
              br
              input(type="text" name="password2" placeholder="confirm password *" required)
              br
              p * Required
              br
              button.btn.btn-primary.btn-lg#register-btn(type="submit") Submit

          .modal-footer
            button.btn.btn-lg.close(type="button" data-dismiss="modal") &times 

    div.modal.fade#deleteModal
      .modal-dialog
        .modal-content  
          .modal-header 

          .modal-body 
            form(action="/deleteMember/" + id method="post") 
              input(type="text" name="id" value=id hidden)
              br
              button.btn.btn-primary.btn-lg#register-btn(type="submit") Confirm deletion of your profile 
              p This action cannot be undone. 
              p All data will be permanently be deleted. 

          .modal-footer
            button.btn.btn-lg.close(type="button" data-dismiss="modal") &times